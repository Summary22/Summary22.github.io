<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Summary&#39;s Blog</title>
  
  <subtitle>壹百零壹分笑容</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noblestaspiration.net/"/>
  <updated>2018-03-20T05:47:50.780Z</updated>
  <id>http://noblestaspiration.net/</id>
  
  <author>
    <name>Summary</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Endeavour</title>
    <link href="http://noblestaspiration.net/2018/03/15/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://noblestaspiration.net/2018/03/15/第一篇文章/</id>
    <published>2018-03-15T14:17:57.454Z</published>
    <updated>2018-03-20T05:47:50.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="thankyou！"><a href="#thankyou！" class="headerlink" title="thankyou！"></a>thankyou！</h1><hr><p>改变一些东西</p><p>。java，vim，C，C++</p><p>makedown语法</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;thankyou！&quot;&gt;&lt;a href=&quot;#thankyou！&quot; class=&quot;headerlink&quot; title=&quot;thankyou！&quot;&gt;&lt;/a&gt;thankyou！&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;改变一些东西&lt;/p&gt;
&lt;p&gt;。java，vim，C，C++&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="important" scheme="http://noblestaspiration.net/tags/important/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://noblestaspiration.net/2018/03/15/hello-world/"/>
    <id>http://noblestaspiration.net/2018/03/15/hello-world/</id>
    <published>2018-03-15T12:23:04.812Z</published>
    <updated>2018-03-15T12:23:04.812Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python常用模块集锦</title>
    <link href="http://noblestaspiration.net/2018/03/12/Python%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97%E9%9B%86%E9%94%A6/"/>
    <id>http://noblestaspiration.net/2018/03/12/Python常用模块集锦/</id>
    <published>2018-03-12T09:51:35.000Z</published>
    <updated>2018-03-19T16:16:53.592Z</updated>
    
    <content type="html"><![CDATA[<p>Python常用模块集锦</p><p>常用模块主要分为以下几类（缺失的后续再补充）：</p><ul><li>时间转换</li><li>时间计算</li><li>序列化和反序列化：<code>json</code>，<code>pickle</code></li><li>编解码：<code>unicode</code>，<code>base64</code></li><li>加解密：<code>md5</code>，<code>sha1</code>，<code>hmac_sha1</code>，<code>aes</code></li><li>常见装饰器：<ul><li>计算执行时间装饰器</li><li>缓存装饰器</li><li>错误重试装饰器</li><li>延迟装饰器</li><li>尾递归优化装饰器</li></ul></li><li><code>ini</code>配置文件读取</li></ul><a id="more"></a><p>代码整合如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on 9/21/17 1:46 PM</span></span><br><span class="line"><span class="string">@author: Chen Liang</span></span><br><span class="line"><span class="string">@function: python常用模块集锦，util.py</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> ConfigParser</span><br><span class="line"><span class="keyword">import</span> ast</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> b2a_hex, a2b_hex</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BEFORE = <span class="number">1</span></span><br><span class="line">LATER = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommonUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""Python通用单元：不好归类但常用的方法此处添加"""</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TimeTransferUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""时间相关的常见转换方法"""</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TimeUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""时间相关的常见计算方法"""</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">str_to_date</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SerializeUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""序列化和反序列化：json, pickle"""</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">json_loads</span><span class="params">(json_str, encoding=None)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            obj = json.loads(s=json_str, encoding=encoding)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span>, obj</span><br><span class="line">        <span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">json_dumps</span><span class="params">(obj)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            json_str = json.dumps(obj=obj)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span>, json_str</span><br><span class="line">        <span class="keyword">except</span> TypeError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pickle_loads</span><span class="params">(pickle_str)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            obj = pickle.loads(pickle_str)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span>, obj</span><br><span class="line">        <span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pickle_dumps</span><span class="params">(obj)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            pickle_str = pickle.dumps(obj)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span>, pickle_str</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CodecUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""编解码相关常见方法：base64 unicode"""</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">base64_encode</span><span class="params">(data)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span>, base64.b64encode(data)</span><br><span class="line">        <span class="keyword">except</span> TypeError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">base64_decode</span><span class="params">(encoded_data)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span>, base64.b64decode(encoded_data)</span><br><span class="line">        <span class="keyword">except</span> TypeError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span>, str(e)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_unicode</span><span class="params">(s, encoding=<span class="string">'utf-8'</span>)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> s <span class="keyword">if</span> isinstance(s, unicode) <span class="keyword">else</span> unicode(s, encoding)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">unicode_to</span><span class="params">(unicode_s, encoding=<span class="string">'utf-8'</span>)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> unicode_s.encode(encoding)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CryptoUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""加解密相关常见方法： md5 aes"""</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(str_object)</span>:</span></span><br><span class="line">        <span class="string">"""md5"""</span></span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        m.update(str_object)</span><br><span class="line">        <span class="keyword">return</span> m.hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">aes_encrypt</span><span class="params">(s, key, salt, mode=AES.MODE_CBC)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        aes加密</span></span><br><span class="line"><span class="string">        :param s: 待加密字符串</span></span><br><span class="line"><span class="string">        :param key: 密钥</span></span><br><span class="line"><span class="string">        :param salt: 盐, 16bit eg. b'0000000101000000'</span></span><br><span class="line"><span class="string">        :param mode: AES模式</span></span><br><span class="line"><span class="string">        :return: 加密后的字符串</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        cipher = AES.new(hashlib.md5(key).hexdigest(), mode, salt)</span><br><span class="line">        n_text = s + (<span class="string">'\0'</span> * (<span class="number">16</span> - (len(s) % <span class="number">16</span>)))</span><br><span class="line">        <span class="keyword">return</span> b2a_hex(cipher.encrypt(n_text))</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">aes_decrypt</span><span class="params">(s, key, salt, mode=AES.MODE_CBC)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        aes解密</span></span><br><span class="line"><span class="string">        :param s: 待解密字符串</span></span><br><span class="line"><span class="string">        :param key: 密钥</span></span><br><span class="line"><span class="string">        :param salt: 盐, 16bit eg. b'0000000101000000'</span></span><br><span class="line"><span class="string">        :param mode: AES模式</span></span><br><span class="line"><span class="string">        :return: 解密后的字符串</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        cipher = AES.new(hashlib.md5(key).hexdigest(), mode, salt)</span><br><span class="line">        <span class="keyword">return</span> cipher.decrypt(a2b_hex(s)).rstrip(<span class="string">'\0'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TailRecurseException</span>:</span></span><br><span class="line">    <span class="string">"""尾递归异常"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, args, kwargs)</span>:</span></span><br><span class="line">        self.args = args</span><br><span class="line">        self.kwargs = kwargs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DecoratorUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""常见装饰器： 执行时间timeit，缓存cache，错误重试retry"""</span></span><br><span class="line"></span><br><span class="line">    __cache_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">timeit</span><span class="params">(fn)</span>:</span></span><br><span class="line">        <span class="string">"""计算执行时间"""</span></span><br><span class="line"><span class="meta">        @wraps(fn)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrap</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">            start = time.time()</span><br><span class="line">            ret = fn(*args, **kwargs)</span><br><span class="line">            end = time.time()</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"@timeit: &#123;0&#125; tasks, &#123;1&#125; secs"</span>.format(fn.__name__, str(end - start))</span><br><span class="line">            <span class="keyword">return</span> ret</span><br><span class="line">        <span class="keyword">return</span> wrap</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__is_expired</span><span class="params">(entry, duration)</span>:</span></span><br><span class="line">        <span class="string">"""是否过期"""</span></span><br><span class="line">        <span class="keyword">if</span> duration == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> time.time() - entry[<span class="string">'time'</span>] &gt; duration</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__compute_key</span><span class="params">(fn, args, kw)</span>:</span></span><br><span class="line">        <span class="string">"""序列化并求其哈希值"""</span></span><br><span class="line">        key = pickle.dumps((fn.__name__, args, kw))</span><br><span class="line">        <span class="keyword">return</span> hashlib.sha1(key).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cache</span><span class="params">(cls, expired_time=<span class="number">-1</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        缓存</span></span><br><span class="line"><span class="string">        :param expired_time: 过期时间，-1 表示不过期</span></span><br><span class="line"><span class="string">        :return: 返回缓存的结果或者计算的结果</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_cache</span><span class="params">(fn)</span>:</span></span><br><span class="line"><span class="meta">            @wraps(fn)</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">wrap</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">                key = cls.__compute_key(fn, args, kwargs)</span><br><span class="line">                <span class="keyword">if</span> key <span class="keyword">in</span> cls.__cache_dict:</span><br><span class="line">                    <span class="keyword">if</span> cls.__is_expired(cls.__cache_dict[key], expired_time) <span class="keyword">is</span> <span class="keyword">False</span>:</span><br><span class="line">                        <span class="keyword">return</span> cls.__cache_dict[key][<span class="string">'value'</span>]</span><br><span class="line">                ret = fn(*args, **kwargs)</span><br><span class="line">                cls.__cache_dict[key] = &#123;</span><br><span class="line">                    <span class="string">'value'</span>: ret,</span><br><span class="line">                    <span class="string">'time'</span>: time.time()</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> ret</span><br><span class="line">            <span class="keyword">return</span> wrap</span><br><span class="line">        <span class="keyword">return</span> _cache</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retry</span><span class="params">(exceptions, retry_times=<span class="number">3</span>, time_pause=<span class="number">3</span>, time_offset=<span class="number">1</span>)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        错误重试</span></span><br><span class="line"><span class="string">        :param exceptions: 单个异常比如ValueError, 或者tuple,元组元素是异常，比如(ValueError, TypeError)</span></span><br><span class="line"><span class="string">        :param retry_times: 重试次数</span></span><br><span class="line"><span class="string">        :param time_pause: 初始暂停时间</span></span><br><span class="line"><span class="string">        :param time_offset: 暂停时间的偏移倍数，默认不偏移</span></span><br><span class="line"><span class="string">        :return: 返回成功的值，或者重拾次数结束时抛出异常</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_retry</span><span class="params">(fn)</span>:</span></span><br><span class="line"><span class="meta">            @wraps(fn)</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">wrap</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">                retry_times_tmp, time_pause_tmp = retry_times, time_pause</span><br><span class="line">                <span class="keyword">while</span> retry_times_tmp &gt; <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">return</span> fn(*args, **kwargs)</span><br><span class="line">                    <span class="keyword">except</span> exceptions:</span><br><span class="line">                        time.sleep(time_pause_tmp)</span><br><span class="line">                        retry_times_tmp -= <span class="number">1</span></span><br><span class="line">                        time_pause_tmp *= time_offset</span><br><span class="line">                <span class="keyword">return</span> fn(*args, **kwargs)</span><br><span class="line">            <span class="keyword">return</span> wrap</span><br><span class="line">        <span class="keyword">return</span> _retry</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delay</span><span class="params">(delay_time=<span class="number">3</span>, mode=BEFORE)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        延迟装饰器，支持在函数执行之前和之后加延时，如果想在前后同时加，可以使用两次装饰。</span></span><br><span class="line"><span class="string">        time.sleep只会阻塞当前线程不会阻塞整个进程，其它线程不受影响</span></span><br><span class="line"><span class="string">        :param delay_time: 延迟时间，是float类型</span></span><br><span class="line"><span class="string">        :param mode: 模式，指定是在函数执行之前加延时还是在执行之后加，值为BEFORE(1)或者LATER(2)</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">_delay</span><span class="params">(fn)</span>:</span></span><br><span class="line"><span class="meta">            @wraps(fn)</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">wrap</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">                <span class="keyword">if</span> mode == BEFORE:</span><br><span class="line">                    time.sleep(delay_time)</span><br><span class="line">                ret = fn(*args, **kwargs)</span><br><span class="line">                <span class="keyword">if</span> mode == LATER:</span><br><span class="line">                    time.sleep(delay_time)</span><br><span class="line">                <span class="keyword">return</span> ret</span><br><span class="line">            <span class="keyword">return</span> wrap</span><br><span class="line">        <span class="keyword">return</span> _delay</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tail_call_optimized</span><span class="params">(fn)</span>:</span></span><br><span class="line">        <span class="string">"""尾递归优化装饰器，如果被装饰函数不是尾递归函数则会报错"""</span></span><br><span class="line"><span class="meta">        @wraps(fn)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrap</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">            f = sys._getframe()</span><br><span class="line">            <span class="keyword">if</span> f.f_back <span class="keyword">and</span> f.f_back.f_back <span class="keyword">and</span> f.f_back.f_back.f_code == f.f_code:</span><br><span class="line">                <span class="keyword">raise</span> TailRecurseException(args, kwargs)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">return</span> fn(*args, **kwargs)</span><br><span class="line">                    <span class="keyword">except</span> TailRecurseException <span class="keyword">as</span> e:</span><br><span class="line">                        args = e.args</span><br><span class="line">                        kwargs = e.kwargs</span><br><span class="line">        <span class="keyword">return</span> wrap</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IniConfigParserUtil</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""ini配置文件读取"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *file_names)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        init</span></span><br><span class="line"><span class="string">        :param file_names: 包含多个元素的可迭代对象</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.config = ConfigParser.ConfigParser()</span><br><span class="line">        <span class="keyword">for</span> file_name <span class="keyword">in</span> file_names:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.config.readfp(open(file_name, <span class="string">'rb'</span>))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> IOError:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.exit(<span class="string">'All files have failed to read'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_string</span><span class="params">(self, section, option)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.config.get(section, option)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_int</span><span class="params">(self, section, option)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.config.getint(section, option)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_float</span><span class="params">(self, section, option)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.config.getfloat(section, option)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_boolean</span><span class="params">(self, section, option)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.config.getboolean(section, option)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_list</span><span class="params">(self, section, option)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> ast.literal_eval(self.config.get(section, option))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_dict</span><span class="params">(self, section, option)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> ast.literal_eval(self.config.get(section, option))</span><br></pre></td></tr></table></figure><p>缺失部分后续待添加，记得填坑。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python常用模块集锦&lt;/p&gt;
&lt;p&gt;常用模块主要分为以下几类（缺失的后续再补充）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间转换&lt;/li&gt;
&lt;li&gt;时间计算&lt;/li&gt;
&lt;li&gt;序列化和反序列化：&lt;code&gt;json&lt;/code&gt;，&lt;code&gt;pickle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;编解码：&lt;code&gt;unicode&lt;/code&gt;，&lt;code&gt;base64&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;加解密：&lt;code&gt;md5&lt;/code&gt;，&lt;code&gt;sha1&lt;/code&gt;，&lt;code&gt;hmac_sha1&lt;/code&gt;，&lt;code&gt;aes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;常见装饰器：&lt;ul&gt;
&lt;li&gt;计算执行时间装饰器&lt;/li&gt;
&lt;li&gt;缓存装饰器&lt;/li&gt;
&lt;li&gt;错误重试装饰器&lt;/li&gt;
&lt;li&gt;延迟装饰器&lt;/li&gt;
&lt;li&gt;尾递归优化装饰器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ini&lt;/code&gt;配置文件读取&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python" scheme="http://noblestaspiration.net/categories/Python/"/>
    
    
      <category term="Python" scheme="http://noblestaspiration.net/tags/Python/"/>
    
      <category term="总结" scheme="http://noblestaspiration.net/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
